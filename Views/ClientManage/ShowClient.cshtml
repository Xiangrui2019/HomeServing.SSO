@using IdentityServer4.Extensions
@model IdentityServer4.EntityFramework.Entities.Client

<div class="container">
    <dl>
        <dt>ID</dt>
        <dd>@Model.Id</dd>
        <dt>启用</dt>
        <dd>@Model.Enabled</dd>
        <dt>客户端Id</dt>
        <dd>@Model.ClientId</dd>
        <dt>客户端名称</dt>
        <dd>@Model.ClientName</dd>
        <dt>要求客户端Secret</dt>
        <dd>@Model.RequireClientSecret</dd>
        <dt>客户端简介</dt>
        <dd>@Model.Description</dd>
        <dt>客户端Uri</dt>
        <dd>@Model.ClientUri</dd>
        <dt>协议类型</dt>
        <dd>@Model.ProtocolType</dd>
        <dt>允许浏览器AccessToken</dt>
        <dd>@Model.AllowAccessTokensViaBrowser</dd>
        <dt>前端通道登出Uri</dt>
        <dd>@Model.FrontChannelLogoutUri</dd>
        <dt>后端通道登出Uri</dt>
        <dd>@Model.BackChannelLogoutUri</dd>
        <dt>在更新AK时刷新Claim</dt>
        <dd>@Model.UpdateAccessTokenClaimsOnRefresh</dd>
        <dt>允许离线访问</dt>
        <dd>@Model.AllowOfflineAccess</dd>
        <dt>启用本地登录</dt>
        <dd>@Model.EnableLocalLogin</dd>
        <dt>AuthorizationCode LifeTime</dt>
        <dd>@Model.AuthorizationCodeLifetime</dd>
        <dt>AccessToken LifeTime</dt>
        <dd>@Model.AccessTokenLifetime</dd>
        <dt>IdentityToken LifeTime</dt>
        <dd>@Model.IdentityTokenLifetime</dd>
        <dt>DeviceCode LifeTime</dt>
        <dd>@Model.DeviceCodeLifetime</dd>
        <dt>允许的授权方式</dt>
        <dd>
            <ul>
                @if (!Model.AllowedGrantTypes.IsNullOrEmpty())
                {
                    @foreach (var grantType in Model.AllowedGrantTypes)
                    {
                        <li>@grantType.GrantType</li>
                    }
                }
            </ul>
        </dd>
        <dt>客户端Secrets</dt>
        <dd>
            <ul>
                @if (!Model.ClientSecrets.IsNullOrEmpty())
                {
                    @foreach (var secret in Model.ClientSecrets)
                    {
                        <li>@secret.Value</li>
                    }
                }
            </ul>
        </dd>
        <dt>跳转Uris</dt>
        <dd>
            <ul>
                @if (!Model.RedirectUris.IsNullOrEmpty())
                {
                    @foreach (var uri in Model.RedirectUris)
                    {
                        <li>@uri.RedirectUri</li>
                    }
                }
            </ul>
        </dd>
        <dt>POST登出跳转Uris</dt>
        <dd>
            <ul>
                @if (!Model.PostLogoutRedirectUris.IsNullOrEmpty())
                {
                    @foreach (var logoutRedirectUri in Model.PostLogoutRedirectUris)
                    {
                        <li>@logoutRedirectUri.PostLogoutRedirectUri</li>
                    }
                }
            </ul>
        </dd>
        <dt>允许的Scope</dt>
        <dd>
            <ul>
            @if (!Model.AllowedScopes.IsNullOrEmpty())
            {
                @foreach (var scope in Model.AllowedScopes)
                {
                    <li>@scope.Scope</li>
                }
            }
            </ul>
        </dd>
        <dt>允许的CORS源</dt>
        <dd>
            <ul>
                @if (!Model.AllowedScopes.IsNullOrEmpty())
                {
                    @foreach (var cors in Model.AllowedCorsOrigins)
                    {
                        <li>@cors.Origin</li>
                    }
                }
            </ul>
        </dd>
    </dl>
</div>
